#!/bin/bash
colors="$LS_COLORS"
color="${colors%%:*}"

# Print help text
print_help() {
cat << EOF
lscolors prints the names of each attribute in the \$LS_COLORS environment
variable, formatting each according to its assigned ANSI escape code.

    -n [num]: print the first [num] attributes obtained from \$LS_COLORS
    -f [key]: search the output of this script for strings that match [key]

NOTE: Using -f and -n together selects the first [num] results of a search
NOTE: This script is intended for systems (mainly Linux) that use \$LS_COLORS.
EOF
}

# Disable the glob
set -f

# Collect command-line flags
while getopts :f:n:h opt; do
    case $opt in
        f) search=$OPTARG;;
        n) num=$OPTARG;;
        h) print_help; exit 0;;
        :) case $OPTARG in # { Missing argument --> display an error message }
               f) typ="string (search key)";;
               n) typ="int (number of entries)";;
           esac
           echo "missing argument for option -$OPTARG : $typ"; exit 1;;
        ?) echo "error: unrecognized flag -$OPTARG"; exit 1;;
    esac
done

# Print the attribute color for each attribute in $LS_COLORS
main() {
    if [[ -n $num && -n $search ]]; then # Select first $num results of search
        bash "$0" | grep $search | head -n $num
    elif [[ -n $num ]]; then
        bash "$0" | head -n $num
    elif [[ -n $search ]]; then
        bash "$0" | grep $search
    else
        while [[ -n "$color" ]]; do
            print_color $color
            colors="${colors#*:}"
            color="${colors%%:*}"
            if [[ $color == $colors ]]; then
                print_color $color
                color=""
            fi
        done
    fi
}

# Print the attribute name from $LS_COLORS using its assigned ANSI color escape
# Replaces attribute abbreviations with a description (e.g. "di" becomes
# "directory").
print_color() {
    name="${1%%=*}"
    escape_code="${1#*=}"
    case $name in
        di) name="directory";;
        ln) name="symbolic link";;
        so) name="socket";;
        pi) name="pipe";;
        ex) name="executable";;
        bd) name="block device driver";;
        cd) name="character device driver";;
        su) name="setuid (executable with setuid bit set)";;
        sg) name="setgid (executable with setgid bit set)";;
        tw) name="sticky other writable (directory writable to others, with sticky bit)";;
        ow) name="other writable (directory writable to others, without sticky bit)";;
        rs) name="reset to \"normal\" color";;
        mh) name="multi-hardlink (regular file with more than one link)";;
        do) name="door";;
        or) name="orphan symlink (symlink to nonexistent file)";;
        mi) name="missing file";;
        ca) name="file with capability";;
        st) name="sticky bit";;
        fi) name="normal file";;
        no) name="global default";;
    esac
    echo -e "\033[$escape_code"m$name"\033[0m"
}

main
